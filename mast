#!/bin/bash

[ -d ~/.mast ] || mkdir ~/.mast

usage() {
    cat <<USAGE
mast -- mastodon

# config

mast use "<server-url>"
    setting a mastodon server (instance)
    DONT contain https:// or /
    example)
        mast use pawoo.net
        mast use friends.nico

mast use
    check the current using server (instance)

mast create-app "<app-name>"
    make your app on the server

mast auth
    auth your account with your app

# get timeline

mast home
    home timeline

mast public [--local]
    public timeline

# post

mast toot [-f "<image>"] "<status>"
    toot (tweet) a text
    upload an image file, specified url or local-path

mast toot --rm "<status-id>"
    delete your toot

mast reblog [--rm] "<status-id>"
    create (or destroy) a reblog

mast fav [--rm] "<status-id>"
    create (or destroy) a fav

# RESTs

mast GET <endpoint>
    Server address must omit from <endpoint>
    e.g. mast GET /api/v1/accounts/10/statuses

USAGE
}

# helpers
server() {
    if [ -f ~/.mast/default ]; then
        < ~/.mast/default tr -d '\n'
    else
        false
    fi
}

app-token() {
    F="$HOME/.mast/$(server)/app.json"
    if [ -f "$F" ]; then
        jq -r '"\(.client_id)\n\(.client_secret)"' "$F"
    else
        false
    fi
}

browser-open() {
    if which firefox >/dev/null; then
        firefox "$1"
    elif [ -d /Applications ]; then
        open -a 'Google Chrome' "$1"
    else
        echo "No available browser"
        echo "Manually, open $1"
        false
    fi
}

user-token() {
    F="$HOME/.mast/$(server)/auth.json"
    if [ -f "$F" ]; then
        jq -r '.access_token' "$F"
    else
        false
    fi
}

media-upload() {
    MEDIA=$1
    case "$MEDIA" in
        http*)
            LOC="/tmp/${MEDIA##*/}"
            wget --quiet -O "$LOC" "$MEDIA"
            ;;
        *)
            LOC=$MEDIA
            ;;
    esac

    URL="https://$(server)/api/v1/media"
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        -F file=@"$LOC" \
        "$URL" |
    jq .id
}

get() {
    URL="https://$(server)$1"
    curl -XGET -s -H "Authorization: Bearer $(user-token)" "$URL"
}

# commands
use() {
    if [ ! -d ~/.mast/"$1" ]; then
        mkdir ~/.mast/"$1"
    fi
    echo "$1" > ~/.mast/default
    echo "Your mastodon server is https://$(server)/"
}

create-app() {
    URL="https://$(server)/api/v1/apps"
    CLIENT_NAME="$1"
    REDIRECT_URI="urn:ietf:wg:oauth:2.0:oob"
    F="$HOME/.mast/$(server)/app.json"
    curl -s -XPOST "$URL" -d "client_name=$CLIENT_NAME&redirect_uris=$REDIRECT_URI&scopes=read%20write%20follow" >"$F"
}

auth() {
    AUTH_URL="https://$(server)/oauth/authorize"
    REDIRECT_URI="urn:ietf:wg:oauth:2.0:oob"
    CLIENT_ID=$(app-token | head -1)
    CLIENT_SECRET=$(app-token | tail -1)

    browser-open "${AUTH_URL}?client_id=$CLIENT_ID&response_type=code&redirect_uri=$REDIRECT_URI&scope=read%20write%20follow"

    echo -n "copy&paste CODE> "
    read CODE

    TOKEN_URL="https://$(server)/oauth/token"
    F="$HOME/.mast/$(server)/auth.json"

    curl -s -X POST \
        -F "client_id=$CLIENT_ID" \
        -F "client_secret=$CLIENT_SECRET" \
        -F "grant_type=authorization_code" \
        -F "redirect_uri=$REDIRECT_URI" \
        -F "code=$CODE" \
        "$TOKEN_URL" > "$F"
}

timeline-from() {
    URL="https://$(server)/$1"
    curl -s -XGET -H "Authorization: Bearer $(user-token)" "$URL" |
    sed 's/<[^>]*>//g; s/http/ &/g; s/  */ /g' |
    jq -r 'reverse | .[] |
        {
            id,
            created_at,
            name: .account.username,
            nick: .account.display_name,
            text: .content,
            reblog
        } |
        if .reblog == null then
            "\u001b[33m\(.nick) \u001b[91m@\(.name) \u001b[33m\(.created_at) \u001b[37m\(.id) \n"
            + "\u001b[0m  \(.text)"
        else
            "\u001b[33m\(.nick) \u001b[91m@\(.name) RT\n"
            + "\u001b[37m>\u001b[0m  \u001b[33m\(.reblog.account.display_name) \u001b[91m@\(.reblog.account.username) \u001b[33m\(.reblog.created_at) \u001b[37m\(.reblog.id) \n"
            + "\u001b[37m>\u001b[0m    \(.reblog.content)"
        end'
}

home() {
    timeline-from "/api/v1/timelines/home"
}

public() {
    if [ "$2" = "--local" ]; then
        timeline-from "/api/v1/timelines/public?local=local"
    else
        timeline-from "/api/v1/timelines/public"
    fi
}

toot() {
    URL="https://$(server)/api/v1/statuses"
    MEDIA=
    MSG=

    while [ "_$1" != "_" ]; do
        case "$1" in
            -f )
                MEDIA=$2
                shift 2
                ;;
            * )
                if [ "_$MSG" == "_" ]; then
                    MSG="$1"
                else
                    MSG="$MSG $1"
                fi
                shift
                ;;
        esac
    done

    if [ "_$MEDIA" = "_" ]; then
        curl -s -XPOST \
            -H "Authorization: Bearer $(user-token)" \
            "$URL" \
            -d "status=$MSG"
    else
        MEDIA_ID=$(media-upload "$MEDIA")
        curl -s -XPOST \
            -H "Authorization: Bearer $(user-token)" \
            "$URL" \
            -d "status=$MSG&media_ids[]=$MEDIA_ID"
    fi
}

toot-rm() {
    URL="https://$(server)/api/v1/statuses/$1"
    curl -s -XDELETE \
        -H "Authorization: Bearer $(user-token)" \
        "$URL"
}

reblog() {
    URL="https://$(server)/api/v1/statuses/$1/reblog"
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        "$URL"
}

reblog-rm() {
    URL="https://$(server)/api/v1/statuses/$1/unreblog"
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        "$URL"
}

fav() {
    URL="https://$(server)/api/v1/statuses/$1/favourite"
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        "$URL"
}

fav-rm() {
    URL="https://$(server)/api/v1/statuses/$1/unfavourite"
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        "$URL"
}

# main

case "$1" in
    use )
        if [ $# -eq 1 ]; then
            server
            echo
        else
            use "$2"
        fi
        ;;
    create-app )
        create-app "$2"
        ;;
    auth )
        auth
        ;;
    home )
        home
        ;;
    public )
        public "$2"
        ;;
    toot | report )
        if [ "$2" = "--rm" ]; then
            toot-rm "$3"
        else
            shift
            toot "$@"
        fi
        ;;
    reblog )
        if [ "$2" = "--rm" ]; then
            reblog-rm "$3"
        else
            reblog "$2"
        fi
        ;;
    fav )
        if [ "$2" = "--rm" ]; then
            fav-rm "$3"
        else
            fav "$2"
        fi
        ;;
    GET )
        get "$2"
        ;;
    * )
        usage
        exit
        ;;
esac
