#!/bin/bash

[ -d ~/.mast ] || mkdir ~/.mast

usage() {
    cat <<USAGE
mast -- mastodon

# config

mast server "<server-name>"
    setting a mastodon server
    server-name begins with http:// or https://

mast create-app "<app-name>"
    make your app on the server

mast auth
    auth your account with your app

# get timeline

mast home
    home timeline

mast public [--local]
    public timeline

# post

mast toot "<status>"
    toot (tweet) a text

mast reblog [--rm] "<status-id>"
    create (or destroy) a reblog

mast fav [--rm] "<status-id>"
    create (or destroy) a fav

USAGE
}

# helpers
server-name() {
    if [ -f ~/.mast/server ]; then
        cat ~/.mast/server
    else
        false
    fi
}

app-token() {
    if [ -f ~/.mast/app.json ]; then
        jq -r '"\(.client_id)\n\(.client_secret)"' ~/.mast/app.json
    else
        false
    fi
}

browser-open() {
    if which firefox >/dev/null; then
        firefox "$1"
    elif [ -d /Applications ]; then
        open -a 'Google Chrome' "$1"
    else
        echo "No available browser"
        echo "Manually, open $1"
        false
    fi
}

user-token() {
    jq -r .access_token ~/.mast/auth.json
}

# commands
server() {
    echo "$1" > ~/.mast/server
    echo "Your mastodon server is $(cat ~/.mast/server)"
}

create-app() {
    SERVER=$(server-name)
    CLIENT_NAME="$1"
    REDIRECT_URI="urn:ietf:wg:oauth:2.0:oob"
    curl -s -XPOST "$SERVER/api/v1/apps" -d "client_name=$CLIENT_NAME&redirect_uris=$REDIRECT_URI&scopes=read%20write%20follow" > ~/.mast/app.json
}

auth() {
    SERVER=$(server-name)
    REDIRECT_URI="urn:ietf:wg:oauth:2.0:oob"
    CLIENT_ID=$(app-token | head -1)
    CLIENT_SECRET=$(app-token | tail -1)

    browser-open "$SERVER/oauth/authorize?client_id=$CLIENT_ID&response_type=code&redirect_uri=$REDIRECT_URI&scope=read%20write%20follow"

    echo -n "copy&paste CODE> "
    read CODE

    curl -s -X POST \
        -F "client_id=$CLIENT_ID" \
        -F "client_secret=$CLIENT_SECRET" \
        -F "grant_type=authorization_code" \
        -F "redirect_uri=$REDIRECT_URI" \
        -F "code=$CODE" \
        "$SERVER/oauth/token" > ~/.mast/auth.json
}

timeline-from() {
    echo "FROM $1"
    SERVER=$(server-name)
    curl -s -XGET -H "Authorization: Bearer $(user-token)" "$SERVER/$1" |
    jq -r 'reverse | .[] |
        {
            id,
            created_at,
            name: .account.username,
            nick: .account.display_name,
            text: .content
        } |
        "\u001b[33m\(.nick) \u001b[91m@\(.name) \u001b[33m\(.created_at) \u001b[37m\(.id) \n\u001b[0m  \(.text)"'
}

home() {
    timeline-from "$SERVER/api/v1/timelines/home"
}

public() {
    if [ "$2" = "--local" ]; then
        timeline-from "$SERVER/api/v1/timelines/public?local"
    else
        timeline-from "$SERVER/api/v1/timelines/public"
    fi
}

toot() {
    SERVER=$(server-name)
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        "$SERVER/api/v1/statuses" \
        -d "status=$1"
}

reblog() {
    SERVER=$(server-name)
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        "$SERVER/api/v1/statuses/$1/reblog"
}

reblog-rm() {
    SERVER=$(server-name)
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        "$SERVER/api/v1/statuses/$1/unreblog"
}

fav() {
    SERVER=$(server-name)
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        "$SERVER/api/v1/statuses/$1/favourite"
}

fav-rm() {
    SERVER=$(server-name)
    curl -s -XPOST \
        -H "Authorization: Bearer $(user-token)" \
        "$SERVER/api/v1/statuses/$1/unfavourite"
}

# main

case "$1" in
    server )
        server "$2"
        ;;
    create-app )
        create-app "$2"
        ;;
    auth )
        auth
        ;;
    home )
        home
        ;;
    public )
        public "$2"
        ;;
    toot | report )
        toot "$2"
        ;;
    reblog )
        if [ "$2" = "--rm" ]; then
            reblog-rm "$3"
        else
            reblog "$2"
        fi
        ;;
    fav )
        if [ "$2" = "--rm" ]; then
            fav-rm "$3"
        else
            fav "$2"
        fi
        ;;
    * )
        usage
        exit
        ;;
esac
